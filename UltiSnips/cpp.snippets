snippet mbeg "template"
#include <iostream>
#include <vector>

using namespace std;

typedef long long ll;

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    $0
    return 0;
}
endsnippet

snippet cbeg "template"
#include <iostream>
#include <vector>

using namespace std;

typedef long long ll;

void solve() {
    $0
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    int t;
    cin >> t;
    while (t--) {
	solve();
    }
    return 0;
}
endsnippet

snippet for "for"
for (int ${1:i} = 0; $1 < ${2:n}; $1++) {
    $0
}
endsnippet

snippet vv "2d vector"
vector<vector<${1:int}>> ${2:arr};$0
endsnippet

snippet vect "vector"
vector<${1:int}> ${2:arr};$0
endsnippet

snippet all "all"
${1:arr}.begin(), $1.end()$0
endsnippet

snippet readvec "read vector"
vector<${1:int}> ${2:arr}(${3:n});
for ($1 &val : $2) {
    cin >> val;
}
$0
endsnippet

snippet sort "read vector"
sort(${1:arr}.begin(), $1.end());$0
endsnippet

snippet pb "push_back"
push_back($1);$0
endsnippet

snippet fastio "Faster io"
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
endsnippet
